version: '3.9'

services:
  database:
    image: postgis/postgis:latest
    container_name: directus_database
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    volumes:
      - directus_data:/var/lib/postgresql/data
      - ~/postgres-init:/docker-entrypoint-initdb.d
    restart: unless-stopped
    networks:
      - directus_network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 30s
      timeout: 5s
      retries: 5

  directus:
    image: directus/directus:latest
    container_name: directus
    environment:
      PUBLIC_URL: ${PUBLIC_URL}
      DB_CLIENT: pg
      DB_HOST: database
      DB_PORT: ${DB_PORT}
      DB_DATABASE: ${DB_DATABASE}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      ADMIN_EMAIL: ${ADMIN_EMAIL}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      CONTENT_SECURITY_POLICY_DIRECTIVES__FRAME_ANCESTORS: "array:http://localhost:3000 http://localhost:8055,self"
      CORS_ENABLED: 'true'
      CORS_ORIGIN: '*'
    volumes:
      - ./snapshots/snapshot.yaml:/directus/snapshots/snapshot.yaml
    depends_on:
      - database
    ports:
      - "8055:8055"
    restart: unless-stopped
    networks:
      - directus_network

networks:
  directus_network:
    driver: bridge

volumes:
  directus_data:
  directus-volume:
